name: Credit card fraud detection app CICD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - "k8s/**"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "k8s/**"

env:
  IMAGE_NAME: '${{vars.DOCKERHUB_USER}}/creditcard_fraud'
  K8S_MANIFEST_PATH: k8s/deployment.yaml

jobs:
  DataPipeLine:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GH_PAT_FOR_K8S_UPDATE }}

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
        
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{runner.os}}-pip-${{hashFiles('requirements.txt')}}
          restore-keys: |
            ${{runner.os}}-pip-

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
      
      - name: Run Pipeline
        env:
          DAGSHUB_TOKEN: ${{secrets.DAGSHUB_TOKEN}}
        run: |
          dvc repro

      - name: Run model test
        env:
          DAGSHUB_TOKEN: ${{secrets.DAGSHUB_TOKEN}}
        run: |
          python -m unittest tests/test_model.py

      - name: Promote model to Production
        env:
          DAGSHUB_TOKEN: ${{secrets.DAGSHUB_TOKEN}}
        run: |
          python scripts/promot_model.py

      - name: Run flask app test
        env: 
          DAGSHUB_TOKEN: ${{secrets.DAGSHUB_TOKEN}}
        run: |
          python -m unittest tests/test_flask_app.py

      # - name: Extract Docker image metadata
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ vars.DOCKERHUB_USER }}/creditcard_fraud

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{vars.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build and push Docker image More actions
        uses: docker/build-push-action@v6
        with:
          push: ${{github.event_name == 'push'}}
          tags: ${{env.IMAGE_NAME}}:${{ github.sha }}

      # - name: Build and push Docker image
      #   run: |
      #     IMAGE_TAG="sha-${{ github.sha }}" #Use github sha for unique tag
      #     echo "Bulding Image: ${IMAGE_NAME}:${IMAGE_TAG}"
      #     docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
      
      - name: Install yq(YAML processor)
        if: github.event_name == 'push'
        run: |
          YQ_VERSION="v4.40.5"
          YQ_BINARY="yq_linux_amd64"
          wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
      
      - name: Update k8s deployment image tag
        if: github.event_name == 'push'
        run: |
          NEW_IMAGE_TAG="${{env.IMAGE_NAME}}:${{ github.sha }}"
          echo "Updating image in ${K8S_MANIFEST_PATH} to ${NEW_IMAGE_TAG}"
          yq e '.spec.template.spec.containers[0].image = env(NEW_IMAGE_TAG)' -i "${K8S_MANIFEST_PATH}"

      - name: Commit and push K8s manifest changes
        if: github.event_name == 'push'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add ${{ env.K8S_MANIFEST_PATH }}
          git diff --staged --quiet || git commit -m "chore(ci): Update app image to ${{ github.sha }}"
          git push
        env:
          GIT_COMMITTER_NAME: 'GitHub Actions'
          GIT_COMMITTER_EMAIL: 'actions@github.com'
          GH_TOKEN: ${{ secrets.GH_PAT_FOR_K8S_UPDATE }}